name: Build and Deploy Docker Images

on:
  push:
    # branches: [ main, master ] # Uncomment if ready for production
    branches: [ m ] # Use 'm' for testing purposes.
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set lowercase repository name
        run: echo "REPO_LOWERCASE=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push backend image
      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          target: production
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPO_LOWERCASE }}-backend:latest
            ${{ env.REGISTRY }}/${{ env.REPO_LOWERCASE }}-backend:${{ github.sha }}

      # Build and push frontend image
      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          target: production
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPO_LOWERCASE }}-frontend:latest
            ${{ env.REGISTRY }}/${{ env.REPO_LOWERCASE }}-frontend:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set lowercase repository name
        run: echo "REPO_LOWERCASE=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Prepare deployment files
        run: |
          mkdir -p ./temp_deploy
          cp -r deploy/* ./temp_deploy/
          chmod +x ./temp_deploy/deploy.sh
          echo "${{ secrets.ENV_FILE }}" > ./temp_deploy/.env
          if ! grep -q "REPO_LOWERCASE" ./temp_deploy/.env; then
            echo "REPO_LOWERCASE=${{ env.REPO_LOWERCASE }}" >> ./temp_deploy/.env
          fi

      - name: Deploy to server using rsync
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.SERVER_HOST }}
          REMOTE_USER: ${{ secrets.SERVER_USERNAME }}
          REMOTE_PORT: ${{ secrets.SERVER_PORT || '22' }}
          SOURCE: temp_deploy/
          TARGET: ${{ secrets.SERVER_DEPLOY_PATH }}
          ARGS: -avz --delete

      - name: Execute deployment script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || '22' }}
          script: |
            cd ${{ secrets.SERVER_DEPLOY_PATH }}
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            export REPO_LOWERCASE="${{ env.REPO_LOWERCASE }}"
            bash ./deploy.sh